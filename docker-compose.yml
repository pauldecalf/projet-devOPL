version: "3.8"

services:

  sonarqube:
    image: sonarqube:community
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://db:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
    depends_on:
      - db
    networks:
      - overlay
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarqube.rule=Host(`docker-devops-1omqvu-994fe1-168-231-87-2.traefik.me`)"
      - "traefik.http.routers.sonarqube.entrypoints=web"
      - "traefik.http.services.sonarqube.loadbalancer.server.port=3000"

  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonar
    volumes:
      - sonarqube_db_data:/var/lib/postgresql/data
    networks:
      - overlay
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.db.rule=Host(`docker-devops-1omqvu-723c52-168-231-87-2.traefik.me`)"
      - "traefik.http.routers.db.entrypoints=web"
      - "traefik.http.services.db.loadbalancer.server.port=3000"

  loki:
    image: grafana/loki:2.9.4
    command: -config.file=/etc/loki/loki-config.yaml
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/loki-config.yaml
      - loki_data:/loki
    networks:
      - overlay
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.loki.rule=Host(`docker-devops-1omqvu-97c4b1-168-231-87-2.traefik.me`)"
      - "traefik.http.routers.loki.entrypoints=web"
      - "traefik.http.services.loki.loadbalancer.server.port=3000"

  promtail:
    image: grafana/promtail:latest
    volumes:
      - ./promtail-config.yaml:/etc/promtail/config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/hostname:/etc/hostname
      - /etc/machine-id:/etc/machine-id
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - loki
    networks:
      - overlay
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.promtail.rule=Host(`docker-devops-1omqvu-03e0e2-168-231-87-2.traefik.me`)"
      - "traefik.http.routers.promtail.entrypoints=web"
      - "traefik.http.services.promtail.loadbalancer.server.port=3000"

  nextjs:
    image: 53872852/nextjs-portfolio
    environment:
      - NODE_ENV=production
      - HOST=0.0.0.0
      - PORT=3000
      - NEXT_TELEMETRY_DISABLED=1
    networks:
      - overlay
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextjs.rule=Host(`docker-devops-1omqvu-4fc4c2-168-231-87-2.traefik.me`)"
      - "traefik.http.routers.nextjs.entrypoints=web"
      - "traefik.http.services.nextjs.loadbalancer.server.port=3000"

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - overlay
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`docker-devops-1omqvu-994fe1-168-231-87-2.traefik.me`)"
      - "traefik.http.routers.prometheus.entrypoints=web"
      - "traefik.http.services.prometheus.loadbalancer.server.port=3000"

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    networks:
      - overlay
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`docker-devops-1omqvu-3aae49-168-231-87-2.traefik.me`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=myresolver"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

networks:
  overlay:
    driver: overlay
    attachable: true

volumes:
  prometheus_data:
  grafana_data:
  loki_data:
  sonarqube_db_data:
